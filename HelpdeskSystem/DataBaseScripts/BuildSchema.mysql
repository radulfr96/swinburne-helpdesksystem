drop database HelpdeskSystem;
create database HelpdeskSystem;

use HelpdeskSystem;

CREATE TABLE User (
    UserID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    Username VARCHAR(20) UNIQUE NOT NULL,
    Password TEXT NOT NULL,
    FirstTime BOOLEAN NOT NULL
);

CREATE TABLE HelpdeskSettings (
    HelpdeskID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    Name VARCHAR(50) NOT NULL,
    HasCheckIn BOOL NOT NULL,
    HasQueue BOOL NOT NULL,
    IsDeleted BOOL NOT NULL DEFAULT false
);

CREATE TABLE Unit (
    UnitID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    Code VARCHAR(8) NOT NULL,
    Name VARCHAR(50) NOT NULL,
    IsDeleted BOOL NOT NULL DEFAULT FALSE
);

CREATE TABLE NickNames (
    StudentID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    SID VARCHAR(20) NOT NULL,
    NickName VARCHAR(20) UNIQUE NOT NULL
);

CREATE TABLE Topic (
    TopicID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    UnitID INT NOT NULL,
    Name VARCHAR(50) NOT NULL,
    IsDeleted BOOL NOT NULL DEFAULT false,
    FOREIGN KEY (UnitID)
        REFERENCES Unit (UnitID)
);

CREATE TABLE QueueItem (
    ItemID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    StudentID INT NOT NULL,
    TopicID INT NOT NULL,
    TimeAdded DATETIME NOT NULL,
    TimeHelped DATETIME,
    TimeRemoved DATETIME,
    FOREIGN KEY (StudentID)
        REFERENCES NickNames (StudentID),
    FOREIGN KEY (TopicID)
        REFERENCES Topic (TopicID)
);

CREATE TABLE CheckInHistory (
    CheckInID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
	StudentID INT NOT NULL,
    UnitID INT NOT NULL,
    CheckInTime DATETIME NOT NULL,
    CheckoutTime DATETIME,
    ForcedCheckout BOOL,
	FOREIGN KEY (StudentID)
		REFERENCES NickNames (StudentID),
    FOREIGN KEY (UnitID)
        REFERENCES Unit (UnitID)
);

CREATE TABLE CheckInQueueItem (
    ID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    QueueItemID INT NOT NULL,
    CheckInID INT NOT NULL,
    FOREIGN KEY (QueueItemID)
        REFERENCES QueueItem (ItemID),
    FOREIGN KEY (CheckInID)
        REFERENCES CheckInHistory (CheckInID)
);

CREATE TABLE HelpdeskUnit (
    HelpdeskUnitID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    HelpdeskID INT NOT NULL,
    UnitID INT NOT NULL,
    FOREIGN KEY (HelpdeskID)
        REFERENCES HelpdeskSettings (HelpdeskID),
    FOREIGN KEY (UnitID)
        REFERENCES Unit (UnitID)
);

CREATE TABLE TimeSpans (
    SpanID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    HelpdeskID INT NOT NULL,
    Name VARCHAR(200),
    StartDate DATETIME,
    EndDate DATETIME,
    foreign key (HelpdeskID)
    references HelpdeskSettings (HelpdeskID)
);

INSERT INTO User (Username, Password, FirstTime) VALUES ('Admin', 'cMzZAHM41tgd07YnFiG5z5qX6gA=', false);
INSERT INTO  HelpdeskSettings (Name, HasCheckIn, HasQueue) VALUES ('Test Helpdesk', TRUE, TRUE);
INSERT INTO Unit (Code, Name) VALUES ('COS00000', 'Test Unit');
INSERT INTO helpdeskunit (HelpdeskID, UnitID) VALUES(1,1);

DELIMITER //
CREATE PROCEDURE `getallhelpdesks` ()
BEGIN
	SELECT *
    FROM helpdesksettings;
END //

CREATE PROCEDURE `getalltimespans`()
BEGIN
	SELECT *
    FROM timespans;
END //

CREATE PROCEDURE `getallusers`()
BEGIN
	SELECT *
    FROM `user`;
END //

CREATE PROCEDURE `getalltopics`()
BEGIN
	SELECT *
    FROM topic;
END //

CREATE PROCEDURE `getallnicknames`()
BEGIN
	SELECT *
    FROM nicknames;
END //

CREATE PROCEDURE `getallcheckins`()
BEGIN
	SELECT *
    FROM checkinhistory;
END //

CREATE PROCEDURE `getallqueueitems`()
BEGIN
	SELECT *
    FROM queueitem;
END //

CREATE PROCEDURE `getallhelpdeskunits`()
BEGIN
	SELECT *
    FROM helpdeskunit;
END //

CREATE PROCEDURE `getallcheckinqueueitems`()
BEGIN
	SELECT *
    FROM checkinqueueitem;
END //
DELIMITER ;